From: csagan5 <32685696+csagan5@users.noreply.github.com>
Date: Sat, 5 Sep 2020 21:38:15 +0200
Subject: Hardening against incognito mode detection

License: GPL-3.0-only - https://spdx.org/licenses/GPL-3.0-only.html
---
 storage/browser/quota/quota_manager_impl.cc | 4 ++--
 storage/browser/quota/quota_settings.cc     | 2 +-
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/storage/browser/quota/quota_manager_impl.cc b/storage/browser/quota/quota_manager_impl.cc
--- a/storage/browser/quota/quota_manager_impl.cc
+++ b/storage/browser/quota/quota_manager_impl.cc
@@ -1776,7 +1776,7 @@ int64_t QuotaManagerImpl::GetQuotaForStorageKey(
     return kNoLimit;
   }
 
-  if (special_storage_policy_ && special_storage_policy_->IsStorageSessionOnly(
+  if (special_storage_policy_ && ((false)) && special_storage_policy_->IsStorageSessionOnly(
                                      storage_key.origin().GetURL())) {
     return settings.session_only_per_storage_key_quota;
   }
@@ -2445,7 +2445,7 @@ void QuotaManagerImpl::SimulateStoragePressure(const url::Origin& origin_url) {
 void QuotaManagerImpl::IsSimulateStoragePressureAvailable(
     IsSimulateStoragePressureAvailableCallback callback) {
   // We assume this is only the case in incognito. If it changes, update this.
-  DCHECK_EQ(is_incognito_, storage_pressure_callback_.is_null());
+  // DCHECK_EQ(is_incognito_, storage_pressure_callback_.is_null());
 
   std::move(callback).Run(!storage_pressure_callback_.is_null());
 }
diff --git a/storage/browser/quota/quota_settings.cc b/storage/browser/quota/quota_settings.cc
--- a/storage/browser/quota/quota_settings.cc
+++ b/storage/browser/quota/quota_settings.cc
@@ -56,7 +56,7 @@ std::optional<QuotaSettings> CalculateNominalDynamicSettings(
   base::ScopedBlockingCall scoped_blocking_call(FROM_HERE,
                                                 base::BlockingType::MAY_BLOCK);
 
-  if (is_incognito) {
+  if ((false) && is_incognito) {
     return CalculateIncognitoDynamicSettings(
         device_info_helper->AmountOfPhysicalMemory());
   }
--
