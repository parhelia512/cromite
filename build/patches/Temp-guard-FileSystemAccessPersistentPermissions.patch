From: uazo <uazo@users.noreply.github.com>
Date: Sun, 29 Oct 2023 15:18:24 +0000
Subject: Temp guard FileSystemAccessPersistentPermissions

---
 .../chrome_file_system_access_permission_context.cc           | 4 ++--
 .../browser/file_system_access/file_system_access_features.cc | 1 +
 2 files changed, 3 insertions(+), 2 deletions(-)

diff --git a/chrome/browser/file_system_access/chrome_file_system_access_permission_context.cc b/chrome/browser/file_system_access/chrome_file_system_access_permission_context.cc
--- a/chrome/browser/file_system_access/chrome_file_system_access_permission_context.cc
+++ b/chrome/browser/file_system_access/chrome_file_system_access_permission_context.cc
@@ -489,7 +489,7 @@ bool ShouldBlockAccessToPath(
   auto should_block_with_rule = [&](const base::FilePath& block_path,
                                     BlockType block_type) -> bool {
     if (path == block_path || path.IsParent(block_path)) {
-      LOG(ERROR) << "Blocking access to " << path
+      LOG(ERROR) << "ShouldBlockAccessToPath: Blocking access to " << path
                  << " because it is a parent of " << block_path;
       return true;
     }
@@ -538,7 +538,7 @@ bool ShouldBlockAccessToPath(
   }
 
   // The nearest ancestor blocks access to its children, so block access.
-  VLOG(1) << "Blocking access to " << path << " because it is inside "
+  LOG(INFO) << "Blocking access to " << path << " because it is inside "
           << nearest_ancestor << " and it's kBlockAllChildren";
   return true;
 }
diff --git a/chrome/browser/file_system_access/file_system_access_features.cc b/chrome/browser/file_system_access/file_system_access_features.cc
--- a/chrome/browser/file_system_access/file_system_access_features.cc
+++ b/chrome/browser/file_system_access/file_system_access_features.cc
@@ -28,4 +28,5 @@ BASE_FEATURE(kFileSystemAccessPersistentPermissions,
 BASE_FEATURE(kFileSystemAccessSymbolicLinkCheck,
              base::FEATURE_ENABLED_BY_DEFAULT);
 
+SET_CROMITE_FEATURE_DISABLED(kFileSystemAccessPersistentPermissions);
 }  // namespace features
--
